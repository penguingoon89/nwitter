{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db7124ed.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Sign In'}\n        />\n        {error && (\n          <span className=\"authError\" onClick={() => setError('')}>\n            {error}\n          </span>\n        )}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'I already have an account' : \"I don't have an account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import { authService, firebaseInstance } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#990085'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from 'fbase';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('삭제하시겠습니까?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== '')\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === '') {\n      return;\n    }\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  const onClearAttachment = () => setAttachment('');\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import { dbService } from 'fbase';\nimport { useEffect, useState } from 'react';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection('nweets')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) => {\n        const newArray = snapshot.docs.map((document) => ({\n          id: document.id,\n          ...document.data(),\n        }));\n        setNweets(newArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService, dbService } from 'fbase';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={'#990085'} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={'#990085'} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'initialzing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}